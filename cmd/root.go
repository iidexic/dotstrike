/*
Copyright Â© 2025 NAME HERE <EMAIL ADDRESS>
*/
package cmd

import (
	"os"

	"github.com/spf13/cobra"
	pops "iidexic.dotstrike/pathops"
)

func ce(e error) {
	if e != nil {
		panic(e)
	}
}

// rootCmd represents the base command when called without any subcommands
var rootCmd = &cobra.Command{
	Use:   "dotget",
	Short: "make groups of config files/dotfiles to copy to one central location",
	Long: `
Dotstrike is an application with the intent to make managing config files easier.
More specifically; this app intends to provide functions to manage, tag, 
and collect files and folders into groups, and copy them to and from a central location.
It was primarly intended for Windows systems, where there is no designated common path 
or standard practice for storing these files. 

In practice, dotstrike is a simple file management tool that can group and sync files
and directories between the path where they are used and a storage/repo location.
`,
	// Uncomment the following line if your bare application
	// has an action associated with it:
	// Run: func(cmd *cobra.Command, args []string) { },
}

// Execute adds all child commands to the root command and sets flags appropriately.
// This is called by main.main(). It only needs to happen once to the rootCmd.
func Execute() {
	err := rootCmd.Execute()
	if err != nil {
		os.Exit(1)
	}
}
func coreConfig() {
	wd, e := os.Getwd()
	ce(e)
	pops.MakeOpenFileF(wd)
}
func init() {
	// Here you will define your flags and configuration settings.
	// Cobra supports persistent flags, which, if defined here,
	// will be global for your application.

	// rootCmd.PersistentFlags().StringVar(&cfgFile, "config", "", "config file (default is $HOME/.iidexic.dotstrike.yaml)")

	// Cobra also supports local flags, which will only run
	// when this action is called directly.
	rootCmd.PersistentFlags().BoolP("global", "g", false, "target the global group")
	cobra.OnInitialize(coreConfig) // pass all initialization functions here
	rootCmd.Flags().StringP("path", "p", "", "path to use for operation. If only a dir is given, filenames will be autogenerated")
}
